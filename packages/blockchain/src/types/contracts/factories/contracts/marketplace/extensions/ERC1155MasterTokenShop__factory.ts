/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC1155MasterTokenShop,
  ERC1155MasterTokenShopInterface,
} from "../../../../contracts/marketplace/extensions/ERC1155MasterTokenShop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ierc1155master_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "idUsedAsShare_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "membership_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenContract_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenUsedForPayment_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CapitalWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Dividend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "shopAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract Membership",
        name: "membership",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract ERC1155",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "tokenUsedForPayement",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ShopCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC1155Master",
        name: "ierc1155master",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "idUsedAsShares",
        type: "uint256",
      },
    ],
    name: "SnapshotTokenSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Sold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "submitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenOnSaleWithdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "dividendId",
        type: "uint256",
      },
    ],
    name: "capitalOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dividend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dividendOnSharesTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getContractBalanceOfToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentDividendId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRaisedCapital",
    outputs: [
      {
        internalType: "uint256",
        name: "raisedCapital",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getShopStatus",
    outputs: [
      {
        internalType: "enum IERC1155TokenShop.Status",
        name: "shopStatus",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ierc1155master",
    outputs: [
      {
        internalType: "contract IERC1155Master",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
    ],
    name: "setShopStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokensBoughtByBuyer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCapital",
    outputs: [
      {
        internalType: "uint256",
        name: "capital",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dividendId",
        type: "uint256",
      },
    ],
    name: "totalCapitalAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawRaisedCapital",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdrawTokensOnSale",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052620000146200027a60201b60201c565b600d553480156200002457600080fd5b50604051620030b1380380620030b183398181016040528101906200004a919062000340565b8484848484836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806003819055507f855e55883701532682c21bec3b85df4b8de0bdf933156c28d177cf1fc5c04aea308660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600354604051620001b996959493929190620004ca565b60405180910390a1505050505086600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550856008819055507fab3065c3f1511789e8b77de2fe7f63fe8d36c868ab14570388e85f691e596199600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600854604051620002659291906200055c565b60405180910390a15050505050505062000589565b60006200028c6200029160201b60201c565b905090565b6000600454905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002cd82620002a0565b9050919050565b620002df81620002c0565b8114620002eb57600080fd5b50565b600081519050620002ff81620002d4565b92915050565b6000819050919050565b6200031a8162000305565b81146200032657600080fd5b50565b6000815190506200033a816200030f565b92915050565b600080600080600080600060e0888a0312156200036257620003616200029b565b5b6000620003728a828b01620002ee565b9750506020620003858a828b0162000329565b9650506040620003988a828b01620002ee565b9550506060620003ab8a828b01620002ee565b9450506080620003be8a828b01620002ee565b93505060a0620003d18a828b01620002ee565b92505060c0620003e48a828b0162000329565b91505092959891949750929550565b620003fe81620002c0565b82525050565b6000819050919050565b60006200042f620004296200042384620002a0565b62000404565b620002a0565b9050919050565b600062000443826200040e565b9050919050565b6000620004578262000436565b9050919050565b62000469816200044a565b82525050565b60006200047c8262000436565b9050919050565b6200048e816200046f565b82525050565b6000620004a18262000436565b9050919050565b620004b38162000494565b82525050565b620004c48162000305565b82525050565b600060c082019050620004e16000830189620003f3565b620004f06020830188620003f3565b620004ff60408301876200045e565b6200050e606083018662000483565b6200051d6080830185620004a8565b6200052c60a0830184620004b9565b979650505050505050565b6000620005448262000436565b9050919050565b620005568162000537565b82525050565b60006040820190506200057360008301856200054b565b620005826020830184620004b9565b9392505050565b612b1880620005996000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806398d5fdca116100ad578063be10494f11610071578063be10494f1461031f578063c78814631461033d578063f23a6e611461035b578063f7a452411461038b578063fc0a7442146103bb57610121565b806398d5fdca14610240578063a29863901461025e578063b0113bf01461028e578063b9cd4168146102bf578063bc197c81146102ef57610121565b80630ff8cf9b116100f45780630ff8cf9b1461019a578063383032ea146101a45780635b41ab31146101c257806366ea37ed146101e057806379e155071461021057610121565b806301ffc9a71461012657806304d82507146101565780630873d508146101725780630b72c10f14610190575b600080fd5b610140600480360381019061013b91906119f7565b6103d7565b60405161014d9190611a3f565b60405180910390f35b610170600480360381019061016b9190611a90565b610451565b005b61017a610561565b6040516101879190611b3c565b60405180910390f35b610198610587565b005b6101a2610653565b005b6101ac610785565b6040516101b99190611b66565b60405180910390f35b6101ca61078f565b6040516101d79190611b66565b60405180910390f35b6101fa60048036038101906101f59190611bbf565b61079e565b6040516102079190611b66565b60405180910390f35b61022a60048036038101906102259190611bbf565b610814565b6040516102379190611b66565b60405180910390f35b610248610839565b6040516102559190611b66565b60405180910390f35b61027860048036038101906102739190611a90565b610843565b6040516102859190611b66565b60405180910390f35b6102a860048036038101906102a39190611d45565b6108fd565b6040516102b6929190611db4565b60405180910390f35b6102d960048036038101906102d49190611a90565b6109e4565b6040516102e69190611b66565b60405180910390f35b61030960048036038101906103049190611ea5565b610a15565b6040516103169190611f83565b60405180910390f35b610327610a2a565b6040516103349190612015565b60405180910390f35b610345610a41565b6040516103529190611b66565b60405180910390f35b61037560048036038101906103709190612030565b610b52565b6040516103829190611f83565b60405180910390f35b6103a560048036038101906103a09190611a90565b610b67565b6040516103b29190611a3f565b60405180910390f35b6103d560048036038101906103d091906120c7565b610c71565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061044a575061044982610d7f565b5b9050919050565b600061045b610de9565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e8360016040518363ffffffff1660e01b81526004016104bc92919061215a565b60206040518083038186803b1580156104d457600080fd5b505afa1580156104e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050c9190612198565b90506000811015610552576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105499061226e565b60405180910390fd5b61055b83610df1565b50505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610591610de9565b9050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610623576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061a90612326565b60405180910390fd5b61062b610e46565b506000610636610fb4565b90506000610643826109e4565b905061064e81610fbe565b505050565b600061065d610de9565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e8360016040518363ffffffff1660e01b81526004016106be92919061215a565b60206040518083038186803b1580156106d657600080fd5b505afa1580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e9190612198565b90506000811015610754576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074b9061226e565b60405180910390fd5b61075c610e46565b506000610767610fb4565b90506000610774826109e4565b905061077f81610fbe565b50505050565b6000600d54905090565b6000610799610fcc565b905090565b60008060006107eb84600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610fd6565b9150915060006107fa866110cc565b9050826108075780610809565b815b935050505092915050565b6006602052816000526040600020602052806000526040600020600091509150505481565b6000600354905090565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e30856040518363ffffffff1660e01b81526004016108a2929190612346565b60206040518083038186803b1580156108ba57600080fd5b505afa1580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f29190612198565b905080915050919050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a30610947610de9565b8888886040518663ffffffff1660e01b815260040161096a9594939291906123f7565b600060405180830381600087803b15801561098457600080fd5b505af1158015610998573d6000803e3d6000fd5b505050507ff21cb237576772b55d882a9252b328a259ba6c87ee19d43de24c2a553780227c33856040516109cd929190612346565b60405180910390a160018491509150935093915050565b60008060006109f484600b610fd6565b9150915081610a0a57610a0561078f565b610a0c565b805b92505050919050565b600063bc197c8160e01b905095945050505050565b6000600560009054906101000a900460ff16905090565b600080610a4c610de9565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e8360016040518363ffffffff1660e01b8152600401610aad92919061215a565b60206040518083038186803b158015610ac557600080fd5b505afa158015610ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afd9190612198565b90506000811015610b43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3a9061226e565b60405180910390fd5b610b4b610fb4565b9250505090565b600063f23a6e6160e01b905095945050505050565b600080610b72610de9565b9050610b7e81846112fe565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82856040518363ffffffff1660e01b8152600401610bdb929190612346565b602060405180830381600087803b158015610bf557600080fd5b505af1158015610c09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2d919061247d565b507ffb35b373b75ffde9c4d321bd6402c04d4719e81228f60c40024bdb4aad8d36568184604051610c5f929190612346565b60405180910390a16001915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e3360006040518363ffffffff1660e01b8152600401610ccf9291906124e5565b60206040518083038186803b158015610ce757600080fd5b505afa158015610cfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1f9190612198565b1415610d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5790612580565b60405180910390fd5b6000610d6a610de9565b9050610d7a816002600185611403565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b6000816002811115610e0657610e05611f9e565b5b600560006101000a81548160ff02191690836002811115610e2a57610e29611f9e565b5b0217905550600560009054906101000a900460ff169050919050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639711715a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610eb257600080fd5b505af1158015610ec6573d6000803e3d6000fd5b50505050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635439ad866040518163ffffffff1660e01b815260040160206040518083038186803b158015610f3257600080fd5b505afa158015610f46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6a9190612198565b600e81905550610f78610fb4565b90507f69c382338c74e0d3a990efe1a52ae89dcf6a9ab705628ec4424f49cddd4e2f8981604051610fa99190611b66565b60405180910390a190565b6000600e54905090565b610fc9600b826116a6565b50565b6000600454905090565b6000806000841161101c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611013906125ec565b60405180910390fd5b611024610fb4565b841115611066576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105d9061267e565b60405180910390fd5b600061107e858560000161172190919063ffffffff16565b9050836000018054905081141561109c5760008092509250506110c5565b60018460010182815481106110b4576110b361269e565b5b906000526020600020015492509250505b9250929050565b6000806000600190505b6110de610fb4565b81116112f45760006064600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663626da068876001866040518463ffffffff1660e01b8152600401611148939291906126cd565b60206040518083038186803b15801561116057600080fd5b505afa158015611174573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111989190612198565b6111a29190612733565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638aa7a8b06001856040518363ffffffff1660e01b815260040161120492919061278d565b60206040518083038186803b15801561121c57600080fd5b505afa158015611230573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112549190612198565b905060008061126c83856117fb90919063ffffffff16565b9150915060008261127e576000611280565b815b9050600061128d876109e4565b905060008060008314156112a0576112d6565b83836112ac9190612733565b91506000806112c56064856117fb90919063ffffffff16565b9150915081156112d3578092505b50505b809950505050505050505080806112ec906127b6565b9150506110d6565b5080915050919050565b6113088282611832565b6000611313836110cc565b90506000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261136291906127ff565b905082600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113b39190612833565b92505081905550808311156113fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f4906128fb565b60405180910390fd5b50505050565b600061141185858585611836565b6001600281111561142557611424611f9e565b5b61142d610a2a565b600281111561143f5761143e611f9e565b5b1461147f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147690612967565b60405180910390fd5b60006003548461148f9190612733565b905083600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060008282546114f19190612833565b92505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161155793929190612987565b602060405180830381600087803b15801561157157600080fd5b505af1158015611585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a9919061247d565b5080600460008282546115bc9190612833565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a3061160a610de9565b8888886040518663ffffffff1660e01b815260040161162d9594939291906123f7565b600060405180830381600087803b15801561164757600080fd5b505af115801561165b573d6000803e3d6000fd5b505050507fbac9694ac0daa55169abd117086fe32c89401d9a3b15dd1d34e55e0aa4e47a9d338686604051611692939291906129be565b60405180910390a183915050949350505050565b60006116b0610fb4565b9050806116bf84600001611912565b101561171c5782600001819080600181540180825580915050600190039060005260206000200160009091909190915055826001018290806001815401808255809150506001900390600052602060002001600090919091909150555b505050565b6000808380549050141561173857600090506117f5565b600080848054905090505b8082101561179c576000611757838361195f565b90508486828154811061176d5761176c61269e565b5b9060005260206000200154111561178657809150611796565b6001816117939190612833565b92505b50611743565b6000821180156117d4575083856001846117b691906127ff565b815481106117c7576117c661269e565b5b9060005260206000200154145b156117ef576001826117e691906127ff565b925050506117f5565b81925050505b92915050565b6000806000831415611813576000809150915061182b565b6001838581611825576118246129f5565b5b04915091505b9250929050565b5050565b61184284848484611985565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663642898d0306040518263ffffffff1660e01b815260040161189d9190612a24565b600060405180830381600087803b1580156118b757600080fd5b505af11580156118cb573d6000803e3d6000fd5b505050507fbac9694ac0daa55169abd117086fe32c89401d9a3b15dd1d34e55e0aa4e47a9d846002600160405161190493929190612a7a565b60405180910390a150505050565b60008082805490501415611929576000905061195a565b816001838054905061193b91906127ff565b8154811061194c5761194b61269e565b5b906000526020600020015490505b919050565b600060028284186119709190612ab1565b82841661197d9190612833565b905092915050565b50505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119d48161199f565b81146119df57600080fd5b50565b6000813590506119f1816119cb565b92915050565b600060208284031215611a0d57611a0c611995565b5b6000611a1b848285016119e2565b91505092915050565b60008115159050919050565b611a3981611a24565b82525050565b6000602082019050611a546000830184611a30565b92915050565b6000819050919050565b611a6d81611a5a565b8114611a7857600080fd5b50565b600081359050611a8a81611a64565b92915050565b600060208284031215611aa657611aa5611995565b5b6000611ab484828501611a7b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611b02611afd611af884611abd565b611add565b611abd565b9050919050565b6000611b1482611ae7565b9050919050565b6000611b2682611b09565b9050919050565b611b3681611b1b565b82525050565b6000602082019050611b516000830184611b2d565b92915050565b611b6081611a5a565b82525050565b6000602082019050611b7b6000830184611b57565b92915050565b6000611b8c82611abd565b9050919050565b611b9c81611b81565b8114611ba757600080fd5b50565b600081359050611bb981611b93565b92915050565b60008060408385031215611bd657611bd5611995565b5b6000611be485828601611baa565b9250506020611bf585828601611a7b565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c5282611c09565b810181811067ffffffffffffffff82111715611c7157611c70611c1a565b5b80604052505050565b6000611c8461198b565b9050611c908282611c49565b919050565b600067ffffffffffffffff821115611cb057611caf611c1a565b5b611cb982611c09565b9050602081019050919050565b82818337600083830152505050565b6000611ce8611ce384611c95565b611c7a565b905082815260208101848484011115611d0457611d03611c04565b5b611d0f848285611cc6565b509392505050565b600082601f830112611d2c57611d2b611bff565b5b8135611d3c848260208601611cd5565b91505092915050565b600080600060608486031215611d5e57611d5d611995565b5b6000611d6c86828701611a7b565b9350506020611d7d86828701611a7b565b925050604084013567ffffffffffffffff811115611d9e57611d9d61199a565b5b611daa86828701611d17565b9150509250925092565b6000604082019050611dc96000830185611a30565b611dd66020830184611b57565b9392505050565b600067ffffffffffffffff821115611df857611df7611c1a565b5b602082029050602081019050919050565b600080fd5b6000611e21611e1c84611ddd565b611c7a565b90508083825260208201905060208402830185811115611e4457611e43611e09565b5b835b81811015611e6d5780611e598882611a7b565b845260208401935050602081019050611e46565b5050509392505050565b600082601f830112611e8c57611e8b611bff565b5b8135611e9c848260208601611e0e565b91505092915050565b600080600080600060a08688031215611ec157611ec0611995565b5b6000611ecf88828901611baa565b9550506020611ee088828901611baa565b945050604086013567ffffffffffffffff811115611f0157611f0061199a565b5b611f0d88828901611e77565b935050606086013567ffffffffffffffff811115611f2e57611f2d61199a565b5b611f3a88828901611e77565b925050608086013567ffffffffffffffff811115611f5b57611f5a61199a565b5b611f6788828901611d17565b9150509295509295909350565b611f7d8161199f565b82525050565b6000602082019050611f986000830184611f74565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110611fde57611fdd611f9e565b5b50565b6000819050611fef82611fcd565b919050565b6000611fff82611fe1565b9050919050565b61200f81611ff4565b82525050565b600060208201905061202a6000830184612006565b92915050565b600080600080600060a0868803121561204c5761204b611995565b5b600061205a88828901611baa565b955050602061206b88828901611baa565b945050604061207c88828901611a7b565b935050606061208d88828901611a7b565b925050608086013567ffffffffffffffff8111156120ae576120ad61199a565b5b6120ba88828901611d17565b9150509295509295909350565b6000602082840312156120dd576120dc611995565b5b600082013567ffffffffffffffff8111156120fb576120fa61199a565b5b61210784828501611d17565b91505092915050565b61211981611b81565b82525050565b6000819050919050565b600061214461213f61213a8461211f565b611add565b611a5a565b9050919050565b61215481612129565b82525050565b600060408201905061216f6000830185612110565b61217c602083018461214b565b9392505050565b60008151905061219281611a64565b92915050565b6000602082840312156121ae576121ad611995565b5b60006121bc84828501612183565b91505092915050565b600082825260208201905092915050565b7f5a494f4e2e455243313135354d6173746572546f6b656e53686f703a3a20557360008201527f6572206973206e6f7420616c6c6f77656420746f2063616c6c2074686973206660208201527f756e6374696f6e00000000000000000000000000000000000000000000000000604082015250565b60006122586047836121c5565b9150612263826121d6565b606082019050919050565b600060208201905081810360008301526122878161224b565b9050919050565b7f5a696f6e2e455243313135354d6173746572546f6b656e53686f703a3a204f6e60008201527f6c7920455243313135354d61737465722063616e2063616c6c2074686973206660208201527f756e6374696f6e00000000000000000000000000000000000000000000000000604082015250565b60006123106047836121c5565b915061231b8261228e565b606082019050919050565b6000602082019050818103600083015261233f81612303565b9050919050565b600060408201905061235b6000830185612110565b6123686020830184611b57565b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156123a957808201518184015260208101905061238e565b838111156123b8576000848401525b50505050565b60006123c98261236f565b6123d3818561237a565b93506123e381856020860161238b565b6123ec81611c09565b840191505092915050565b600060a08201905061240c6000830188612110565b6124196020830187612110565b6124266040830186611b57565b6124336060830185611b57565b818103608083015261244581846123be565b90509695505050505050565b61245a81611a24565b811461246557600080fd5b50565b60008151905061247781612451565b92915050565b60006020828403121561249357612492611995565b5b60006124a184828501612468565b91505092915050565b6000819050919050565b60006124cf6124ca6124c5846124aa565b611add565b611a5a565b9050919050565b6124df816124b4565b82525050565b60006040820190506124fa6000830185612110565b61250760208301846124d6565b9392505050565b7f75736572206973206e6f7420796574204d656d626572206f662074686973204460008201527f414f000000000000000000000000000000000000000000000000000000000000602082015250565b600061256a6022836121c5565b91506125758261250e565b604082019050919050565b600060208201905081810360008301526125998161255d565b9050919050565b7f455243313135354d6173746572546f6b656e53686f703a3a2069642069732030600082015250565b60006125d66020836121c5565b91506125e1826125a0565b602082019050919050565b60006020820190508181036000830152612605816125c9565b9050919050565b7f455243313135354d6173746572546f6b656e53686f703a3a206e6f6e6578697360008201527f74656e7420696400000000000000000000000000000000000000000000000000602082015250565b60006126686027836121c5565b91506126738261260c565b604082019050919050565b600060208201905081810360008301526126978161265b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006060820190506126e26000830186612110565b6126ef602083018561214b565b6126fc6040830184611b57565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061273e82611a5a565b915061274983611a5a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561278257612781612704565b5b828202905092915050565b60006040820190506127a2600083018561214b565b6127af6020830184611b57565b9392505050565b60006127c182611a5a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156127f4576127f3612704565b5b600182019050919050565b600061280a82611a5a565b915061281583611a5a565b92508282101561282857612827612704565b5b828203905092915050565b600061283e82611a5a565b915061284983611a5a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561287e5761287d612704565b5b828201905092915050565b7f455243313135354d6173746572546f6b656e53686f703a3a20616d6f756e742060008201527f657863656564732062616c616e6365206f66206163636f756e74000000000000602082015250565b60006128e5603a836121c5565b91506128f082612889565b604082019050919050565b60006020820190508181036000830152612914816128d8565b9050919050565b7f546f6b656e2073616c652069732043757272656e746c7920636c6f7365640000600082015250565b6000612951601e836121c5565b915061295c8261291b565b602082019050919050565b6000602082019050818103600083015261298081612944565b9050919050565b600060608201905061299c6000830186612110565b6129a96020830185612110565b6129b66040830184611b57565b949350505050565b60006060820190506129d36000830186612110565b6129e06020830185611b57565b6129ed6040830184611b57565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000602082019050612a396000830184612110565b92915050565b6000819050919050565b6000612a64612a5f612a5a84612a3f565b611add565b611a5a565b9050919050565b612a7481612a49565b82525050565b6000606082019050612a8f6000830186612110565b612a9c6020830185612a6b565b612aa9604083018461214b565b949350505050565b6000612abc82611a5a565b9150612ac783611a5a565b925082612ad757612ad66129f5565b5b82820490509291505056fea2646970667358221220184cd256e15552f2bc27f947f85d3232e45b903f10f6f783fc7563f5b448f72064736f6c63430008090033";

type ERC1155MasterTokenShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155MasterTokenShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155MasterTokenShop__factory extends ContractFactory {
  constructor(...args: ERC1155MasterTokenShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ierc1155master_: PromiseOrValue<string>,
    idUsedAsShare_: PromiseOrValue<BigNumberish>,
    owner_: PromiseOrValue<string>,
    membership_: PromiseOrValue<string>,
    tokenContract_: PromiseOrValue<string>,
    tokenUsedForPayment_: PromiseOrValue<string>,
    price_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155MasterTokenShop> {
    return super.deploy(
      ierc1155master_,
      idUsedAsShare_,
      owner_,
      membership_,
      tokenContract_,
      tokenUsedForPayment_,
      price_,
      overrides || {}
    ) as Promise<ERC1155MasterTokenShop>;
  }
  override getDeployTransaction(
    ierc1155master_: PromiseOrValue<string>,
    idUsedAsShare_: PromiseOrValue<BigNumberish>,
    owner_: PromiseOrValue<string>,
    membership_: PromiseOrValue<string>,
    tokenContract_: PromiseOrValue<string>,
    tokenUsedForPayment_: PromiseOrValue<string>,
    price_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      ierc1155master_,
      idUsedAsShare_,
      owner_,
      membership_,
      tokenContract_,
      tokenUsedForPayment_,
      price_,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155MasterTokenShop {
    return super.attach(address) as ERC1155MasterTokenShop;
  }
  override connect(signer: Signer): ERC1155MasterTokenShop__factory {
    return super.connect(signer) as ERC1155MasterTokenShop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MasterTokenShopInterface {
    return new utils.Interface(_abi) as ERC1155MasterTokenShopInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155MasterTokenShop {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155MasterTokenShop;
  }
}
